package com.matrimony.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import com.matrimony.Entity.User;
import com.matrimony.Service.UserService;

@RestController
@RequestMapping("/user")
public class UserController {

    @Autowired
    private UserService userService;

    @CrossOrigin(origins = "http://localhost:3000")
    @PostMapping("/signup")
    public ResponseEntity<?> signUp(@RequestBody User user) {
        try {
            User savedUser = userService.addUser(user);
            return ResponseEntity.status(HttpStatus.CREATED).body(savedUser);
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Error during registration.");
        }
    }

    @CrossOrigin(origins = "http://localhost:3000")
    @PostMapping("/login")
    public ResponseEntity<?> login(@RequestBody User loginRequest) {
        return userService.login(loginRequest);
    }

    @CrossOrigin(origins = "http://localhost:3000")
    @PutMapping("/{id}")
    public ResponseEntity<?> updateUser(
        @PathVariable Long id, 
        @RequestParam(required = false) String firstName,
        @RequestParam(required = false) String lastName,
        @RequestParam(required = false) String email,
        @RequestParam(required = false) String phone,
        @RequestParam(required = false) String address,
        @RequestParam(required = false) String maritalStatus,
        @RequestParam(required = false) String religion,
        @RequestParam(required = false) String caste,
        @RequestParam(required = false) String motherTongue,
        @RequestParam(required = false) String education,
        @RequestParam(required = false) String profession,
        @RequestParam(required = false) double annualIncome,
        @RequestParam(required = false) String bio,
        @RequestParam(required = false) String hobbies,
        @RequestParam(required = false) MultipartFile profilePicture) {

        return userService.updateUser(id, firstName, lastName, email, phone, address, maritalStatus, religion, caste, motherTongue,
                                      education, profession, annualIncome, bio, hobbies, profilePicture);
    }
}
